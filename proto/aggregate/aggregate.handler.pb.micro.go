// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: aggregate/aggregate.handler.proto

package aggregate

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for Aggregate service

func NewAggregateEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for Aggregate service

type AggregateService interface {
}

type aggregateService struct {
	c    client.Client
	name string
}

func NewAggregateService(name string, c client.Client) AggregateService {
	return &aggregateService{
		c:    c,
		name: name,
	}
}

// Server API for Aggregate service

type AggregateHandler interface {
}

func RegisterAggregateHandler(s server.Server, hdlr AggregateHandler, opts ...server.HandlerOption) error {
	type aggregate interface {
	}
	type Aggregate struct {
		aggregate
	}
	h := &aggregateHandler{hdlr}
	return s.Handle(s.NewHandler(&Aggregate{h}, opts...))
}

type aggregateHandler struct {
	AggregateHandler
}
