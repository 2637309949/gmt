// Code generated by vfsgen; DO NOT EDIT.

// +build !dev

package dist

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"net/http"
	"os"
	pathpkg "path"
	"time"
)

// Assets statically implements the virtual filesystem provided to vfsgen.
var Assets = func() http.FileSystem {
	fs := vfsgen۰FS{
		"/": &vfsgen۰DirInfo{
			name:    "/",
			modTime: time.Date(2021, 10, 18, 13, 27, 24, 493393181, time.UTC),
		},
		"/boilerplate": &vfsgen۰DirInfo{
			name:    "boilerplate",
			modTime: time.Date(2021, 10, 15, 18, 22, 46, 913976826, time.UTC),
		},
		"/boilerplate/.gitignore": &vfsgen۰FileInfo{
			name:    ".gitignore",
			modTime: time.Date(2021, 10, 28, 13, 44, 34, 910033468, time.UTC),
			content: []byte("\x73\x72\x76\x2e\x7b\x7b\x2e\x6e\x61\x6d\x65\x7d\x7d\x0a\x61\x70\x69\x2e\x7b\x7b\x2e\x6e\x61\x6d\x65\x7d\x7d\x0a"),
		},
		"/boilerplate/Makefile": &vfsgen۰CompressedFileInfo{
			name:             "Makefile",
			modTime:          time.Date(2021, 11, 1, 16, 26, 58, 267673882, time.UTC),
			uncompressedSize: 1774,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xa4\x54\x51\x6f\xea\x36\x14\x7e\xc6\xbf\xe2\x88\x65\xba\xa4\xbb\xb6\xaf\xf6\x18\x29\x0f\x69\xa1\x29\x12\x34\x55\x6f\x26\xed\x3e\x21\xe3\xb8\xc1\x6a\x82\x91\x6d\xc2\x2a\xc6\x7f\x9f\x6c\x13\x58\x25\x50\xd7\xdd\x17\x63\x1f\x7f\xe7\x3b\xdf\xf9\x7c\xc2\x73\x51\x94\xe9\x7e\x4f\xb4\x52\xf6\x70\x40\xcf\x93\xa7\x22\xad\xa5\x5d\x6d\x97\x84\xab\x96\xbe\xa9\xad\x66\x9c\xab\xed\xda\xd2\x68\xe4\xc0\x31\x7a\xcc\xe6\x13\x97\xb2\x66\xad\x38\x1c\xb0\x11\xba\x93\x5c\xa0\xe9\x3c\xcb\x27\x0b\x7f\x79\x44\xd2\x68\xe4\x8e\x31\xca\xa7\xe5\xe2\xae\x98\xcf\xa7\x65\x1a\x8d\xcc\x4a\x34\x0d\xd4\xd2\x82\x16\x1d\xde\x30\x6d\x04\x60\x6c\x56\x4a\x5b\x78\x98\x64\xe3\x00\x2f\xb3\xfc\x1d\xb6\x12\x86\x6b\xb9\x74\x50\xb6\x5c\x6a\xd1\xa5\xdf\x00\x63\xcb\x6a\xe3\x22\xcd\x8e\xbd\xb9\x4d\xcb\x2c\x5f\xc1\xb0\xbb\x19\x06\x96\xe9\xfc\xa9\x78\x76\x45\x5d\x5f\x67\x3d\x77\x79\xb1\x98\x3c\x66\xb7\xb3\xc9\x38\xfd\x86\x6e\xff\x98\xce\xc6\x8b\x71\x56\x4e\x4e\x15\x2b\x66\x05\xfc\xf6\xab\x89\xd1\x6c\x7c\x3f\xcb\xf2\xef\x29\xfe\x13\xa2\xd1\x99\x32\x26\xb9\xb4\x77\xaa\x6d\xa5\x4d\x43\x3c\xf4\x17\xc3\x25\x60\xc9\xea\x23\xaa\xcc\xf2\x0b\x90\xdb\xad\x6c\xaa\x31\xb3\x22\x8d\x46\x67\x35\xf1\xd1\xd2\x60\x45\x9f\x8d\xdf\x95\x43\x79\xf1\x94\x95\x0f\x67\xab\x14\x88\x75\x07\x21\x1a\xa3\x79\x31\x9e\xde\xff\x48\xe7\x1b\xad\xac\xa2\xb2\xdd\x28\x6d\x0d\x65\x1b\x49\x7c\xe4\xdf\x2f\xdd\x4a\xae\x15\xad\x15\x0e\x9b\xee\x77\x07\xa3\x1e\x86\xee\xa7\xb3\xc9\xf7\x34\x1a\xed\x64\x53\x71\xa6\x2b\x20\x24\xdc\xd0\xd3\x18\xd0\x9b\x40\x19\x23\x44\x9e\x1e\x8a\xc7\x1f\x09\x84\x5c\xbf\x26\x68\xe0\x7f\x39\x60\xec\x37\x8b\x0d\xb3\xab\x94\x10\xea\x1e\xcd\x15\x5c\xa8\xad\x4d\xa3\x7d\x10\x7c\x48\xc2\x4d\x7d\x39\x5c\x29\xee\xe3\x2d\xd3\xaf\x95\xda\xad\xbf\x56\x8a\x93\xb6\x4a\x08\x85\x68\xef\xb5\x1e\xd0\xc0\x88\x0a\xb0\x04\x2c\xe0\x8b\xa1\x5f\x55\x2b\xad\x68\x37\xf6\x8d\xd2\xfa\xcb\x59\x7e\x6f\x9b\xe0\x2b\x05\xc7\xe9\x80\xbf\xc1\xe7\x0a\x18\x1a\xda\x4f\x37\xa5\xf5\x30\xa6\x37\xa4\x56\xa7\xf6\x96\xee\xd1\x90\x5f\x13\x34\xa8\x55\x08\x00\x66\x80\xe5\xda\x58\xd6\x34\x66\xfb\xf2\x22\xff\x02\x5e\x2b\xc0\x4d\xf5\xd2\xb8\x61\x1d\xe2\x1d\x44\xfb\xe3\x54\x1d\x86\x80\x15\xb8\xe7\xf8\x9c\x10\x97\x12\xc4\xfc\x4c\x5d\xa3\xbb\xcf\xd6\x35\xba\x0b\x75\x4f\x2e\x58\x61\x2c\xea\x84\x0d\x16\x74\xc2\x02\xa1\x84\x10\xe4\xe2\x89\x3b\xfb\xb8\x3b\x01\xee\xc2\x1d\x60\xae\x3a\xa1\xcf\x1c\x95\xe2\xaf\x42\xa3\xf0\x93\xa0\x41\xd8\xf4\x7d\x59\xe8\xff\x4e\x82\x51\x5e\x63\x12\x8d\x4e\x1f\x47\x0c\x18\xbf\xc8\x46\x78\x57\xc6\x3e\xd7\x1f\xc9\x75\xa6\xd0\xfa\x75\x26\xd7\xe7\x3b\xa6\x13\x95\x65\xf5\xc7\x7a\x2e\x01\x1a\xe6\xad\xba\xc4\x73\x55\xcd\x25\xc0\x91\x07\x0d\x7e\x39\xfa\x06\x9b\xad\x59\x7d\xa8\xe9\x1a\xfe\x5a\xed\xff\x54\xa0\xef\xe9\x63\xea\x5e\x75\xff\xe4\xbc\x11\x6c\x8d\xfc\x9a\xa0\x81\x6e\xff\xcf\x47\xf0\xf9\xf9\x45\xff\x04\x00\x00\xff\xff\x16\xcd\xfd\x19\xee\x06\x00\x00"),
		},
		"/boilerplate/api": &vfsgen۰DirInfo{
			name:    "api",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 817296395, time.UTC),
		},
		"/boilerplate/api/Dockerfile": &vfsgen۰CompressedFileInfo{
			name:             "Dockerfile",
			modTime:          time.Date(2021, 10, 15, 18, 23, 31, 450645502, time.UTC),
			uncompressedSize: 158,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x72\x0b\xf2\xf7\x55\xa8\xca\xc8\x2e\xd5\x4f\xcf\xcf\x49\xcc\x4b\xb7\x32\xd4\x33\x34\xd1\x33\x34\xd4\x4d\xcc\x29\xc8\xcc\x4b\x55\x48\x2c\x56\x48\x2a\xcd\xcc\x49\x49\x2d\xe2\x72\xf6\x0f\x88\x54\xd0\x53\xd0\xe7\x0a\x0a\xf5\x53\xc8\x4d\xcc\x4e\x85\xc8\x70\x71\x21\xcc\x80\x68\xb2\xca\x49\x2c\x49\x2d\x2e\x81\x68\xd0\xd5\x4d\x2b\xca\xcf\xb5\x85\x1a\xa2\xa0\x9f\x58\x90\xa9\x57\x5d\xad\x97\x97\x98\x9b\x5a\x5b\xab\xa0\xc7\xe5\xea\x17\x12\x14\x19\xe0\xef\xe9\x17\xa2\x10\xad\x84\x2a\xab\x14\x0b\x08\x00\x00\xff\xff\x13\xb3\xe8\xe4\x9e\x00\x00\x00"),
		},
		"/boilerplate/api/handler": &vfsgen۰DirInfo{
			name:    "handler",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 817296395, time.UTC),
		},
		"/boilerplate/api/handler/handler.go": &vfsgen۰CompressedFileInfo{
			name:             "handler.go",
			modTime:          time.Date(2021, 11, 1, 15, 46, 51, 987569274, time.UTC),
			uncompressedSize: 133,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\xcb\x31\x0a\x02\x41\x0c\x05\xd0\x7a\xff\x29\xc2\x56\xda\xac\xd7\xb0\xd7\x0b\x84\x31\xe8\xe0\xce\x24\xc4\x28\x48\x98\xbb\x5b\x28\x76\xdb\xbf\x67\x5c\xee\x7c\x15\xba\x71\xbf\xac\xe2\x40\x6d\xa6\x1e\xb4\xc3\x34\x9b\x6b\xe8\x21\x73\xe9\xdc\x64\x8c\x19\x7b\x20\xde\x26\x74\xfc\x62\x7a\x84\x3f\x4b\x50\x62\xca\x0c\x3d\xd7\x58\x85\x7e\xf8\x24\xfe\xaa\x45\xe8\xbf\x97\x2d\x82\x81\x4f\x00\x00\x00\xff\xff\xfb\xbd\x10\xf9\x85\x00\x00\x00"),
		},
		"/boilerplate/api/handler/helloworld_handler.go": &vfsgen۰CompressedFileInfo{
			name:             "helloworld_handler.go",
			modTime:          time.Date(2021, 11, 2, 13, 47, 23, 634068016, time.UTC),
			uncompressedSize: 5027,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xe4\x93\x4f\x8f\xd3\x30\x10\xc5\xcf\xf1\xa7\x30\x91\x16\xc5\xab\xe0\x4a\x1c\x91\x7a\x60\x29\x12\x5c\xb6\xa8\x0b\x27\x84\x50\x48\xa6\xa9\x45\x6a\xa7\x8e\x5b\x56\x8a\xf2\xdd\xd1\xc4\x4e\x1a\x40\xbb\xf4\x4f\x2a\x1f\x7a\x6a\x6a\x79\xe6\xcd\x7b\x9e\x5f\x99\xa4\x3f\x93\x1c\xe8\x2a\x91\x59\x01\x9a\x10\xb1\x2e\x95\x36\x34\x22\x41\x98\xaa\xf5\x7a\x52\xa8\x3c\x07\x1d\x76\x7f\xd7\x22\xd5\x6a\x92\x94\xc2\x9e\x48\x03\x8f\x06\x3f\x4b\xad\x8c\x9a\xd4\x35\x97\xc9\x1a\x9a\x26\x24\x24\xc8\xd5\xf7\xa4\x14\x34\xcc\x85\x59\x6d\x7f\xf0\x54\x75\xd5\xb9\x7a\x65\x3f\x76\xaf\xb1\xd3\xa4\xad\x0d\x09\x23\x64\xb9\x95\x29\x8d\x56\xf4\xf6\x83\x1d\x87\xd1\xba\x36\xea\xb3\x30\x05\x50\xde\x5e\xe3\xf7\x6d\xff\xb7\x59\x16\xa5\xe6\x91\xba\x09\xf8\x3b\xfb\x1b\x53\x0d\x1b\x7a\x6b\x95\xf9\x02\x36\x5b\xa8\xf0\xb0\x2a\x07\x87\x55\xa9\x64\x05\x8c\x82\xd6\x4a\xd3\x9a\x04\xd6\x22\xff\x28\x97\x0a\x9b\xc6\x34\x74\xf2\xfc\x69\x75\x14\xc2\xe6\x21\x23\x24\xd0\xbd\x90\x6b\x4e\xdf\x4c\x29\x8a\xdd\xc3\x2f\x37\x44\xa4\x61\xc3\xe2\xfd\xa1\xbd\x17\xe9\xaa\x64\x24\xd0\xed\x88\xb3\xc4\x24\x58\xd8\x87\xf8\x8c\xfc\x02\x36\x75\x13\xd3\x10\x73\xce\x60\x09\x9a\x62\x74\x11\x43\x3b\x43\x3f\xcb\x63\x0c\x55\xf4\xeb\xcd\xee\x5b\xd8\x0f\xc3\x48\xd0\x44\xe8\x0f\xb4\xc6\xc1\x9c\x4d\x7e\x27\x64\x16\xbd\xd4\x8c\x04\x62\x89\x29\xd2\x17\x53\x2a\x45\x31\xd4\x7e\x8f\xd9\x76\xe2\x8b\x41\x9d\x4b\xfd\x66\x17\xc6\xf8\xc9\x48\x10\x74\xd6\xa7\x7d\x7c\xfc\x6e\x2b\x8a\xcc\x56\x4b\x51\xec\x6f\x82\xd9\x6a\x89\x47\x24\x68\x08\x39\xd9\xe8\xa6\x37\xca\x1f\x8c\x16\x32\x8f\x18\xda\xac\xeb\x7f\x62\xae\xca\x56\x1c\xdd\xaf\x86\x3d\xed\x03\x3d\x80\xde\x89\x14\xf8\xf3\x4b\x1a\xd3\x23\xb2\x3a\x41\x63\xc4\x48\xff\x53\xf8\x74\x40\xb8\xc4\xfb\x4e\xcd\x11\x24\xcf\xa0\xf0\x48\xf2\x0c\x0a\x9f\x24\xcf\xa0\x18\x99\x64\x6b\xe8\x0a\x48\x76\x2f\x77\x10\xc9\x18\xf3\x59\x24\xbb\x25\xbd\x28\xc9\x68\xc8\x17\xc9\x83\x80\x4e\x27\xf9\x4b\x99\x25\x06\x3c\xc2\x6c\x07\xf0\xc9\xb3\x9d\x60\x64\xa4\x7b\x5b\x57\x40\xf5\xfe\x09\x0f\x02\xdb\xe5\x7d\x16\xdb\xfb\xb5\xbd\x28\xde\xce\x99\x2f\xc2\xff\x4c\xea\x74\xc8\xe7\xd2\x27\xe1\x73\xe9\x15\xef\xb9\x1c\x9b\x6d\x6b\xe8\x0a\xc0\x76\x2f\x77\x10\xd5\x18\xf3\x59\x48\xbb\x25\xbd\x28\xcf\x68\xc8\x17\xcc\x83\x80\x4e\x27\xf9\x53\x92\xfb\x44\x19\xe5\x7d\xb2\x8c\xfa\x23\xc3\xec\x2c\x5d\x01\xcd\xdd\xe3\x1d\x84\x73\x9b\xf4\x59\x3c\x77\xab\x7a\x51\xa0\x5b\x4f\xbe\x88\x1e\x66\xf4\x37\xd2\xbf\x03\x00\x00\xff\xff\x74\x95\x5a\xe8\xa3\x13\x00\x00"),
		},
		"/boilerplate/api/main.go": &vfsgen۰CompressedFileInfo{
			name:             "main.go",
			modTime:          time.Date(2021, 11, 2, 13, 52, 6, 530747502, time.UTC),
			uncompressedSize: 467,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x74\x91\x3f\x6f\xe3\x30\x0c\xc5\x67\xf1\x53\xf0\x3c\x1c\x24\xc0\x27\xef\x39\x64\xb9\x03\x82\x4e\x19\xd2\x02\x9d\x09\x85\x71\x84\x58\x7f\xa0\x30\x69\x00\xc3\xdf\xbd\x50\xec\xa6\x1d\xda\x4d\xd4\x7b\xe4\xfb\x81\xcc\xe4\x4e\xd4\x33\x06\xf2\x11\xc0\x87\x9c\x8a\xa0\x06\xd5\xb8\x14\x42\x37\xa4\xbe\xe7\xd2\x7c\x94\xc1\xbb\x92\xe6\x2a\x0a\xdf\xa4\x3e\xc7\xd1\x46\x0a\x3c\x4d\x7f\xce\x5c\xae\xde\x71\x47\xd9\x77\x47\x8a\xfb\x61\xee\xcc\x25\x49\xea\x1e\xb6\x06\x0c\xc0\xe1\x12\xdd\x3d\x52\x1b\x1c\x41\x51\xce\x2d\x3a\xb9\xe1\x6a\x8d\xf7\x0c\xbb\xe5\xb7\xe7\x79\xdc\xab\x97\xe3\x96\x02\xeb\x45\xa0\xc0\x9b\x54\x02\x89\x6e\x28\x7b\xfb\x39\xd7\x98\x16\x17\x2e\xfb\x8f\xdc\xa9\x2f\xe9\x12\xf7\xda\x80\x9a\x3b\x77\xdc\xfb\xb3\x70\x79\x9a\xd1\x34\xe5\x6c\x6b\x06\x17\x6d\x5a\xfc\xbd\x10\xdb\x45\x1e\x41\xa9\x71\x94\xf4\xe2\x65\x60\x5c\x32\x16\xa4\x15\x3e\x52\x2b\xe8\x4f\xb6\x6f\x88\xcf\xe5\xfa\x95\xb8\xc5\x0a\xf1\x7f\xf0\x1c\x45\x1b\xd3\x82\x9a\x0c\x28\x7f\x40\x2e\xa5\xee\xa2\xaa\xbb\x4b\xd4\xe6\xef\xfd\xe7\xd7\x1a\xa3\x1f\xea\xc2\xd4\x7c\x18\xbb\x21\xa1\x41\x3b\xb9\xb5\xd5\x60\x40\x4d\x30\xc1\x7b\x00\x00\x00\xff\xff\xe0\x8a\xd2\xd5\xd3\x01\x00\x00"),
		},
		"/boilerplate/doc.md": &vfsgen۰CompressedFileInfo{
			name:             "doc.md",
			modTime:          time.Date(2021, 10, 15, 18, 17, 39, 937296400, time.UTC),
			uncompressedSize: 9827,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x5a\x5f\x6f\xdb\x36\x10\x7f\xd7\xa7\x38\xc4\x2f\x29\x3a\xc7\x40\x9a\x65\x7d\x48\x03\xa4\x09\xb2\x66\x58\xdb\xa0\x71\xf7\x52\x64\x01\x6d\x9d\x65\xa2\x34\xe9\xf0\xc8\x34\x1a\xf4\xb0\xef\xb0\x6f\xb8\x4f\x32\x90\x94\x25\x59\x96\x64\x0f\x75\x81\xa6\x70\x50\x44\x27\xde\x1d\xef\xcf\xef\x7e\x94\x23\xb7\x07\xd7\x5a\x19\x35\x56\x02\x2e\xd4\xd8\xce\x50\x1a\x66\xb8\x92\xd1\x09\x03\xc9\x66\xf8\x6a\xcf\xa8\xf9\xde\xe9\xc9\x80\x9d\x46\x51\xaf\x07\x43\x36\x12\x08\x6a\x02\xe7\x4a\x1a\x94\x86\xa2\xa8\x0f\x9f\xe6\x6e\x8f\xc1\x14\x85\x50\x5f\x94\x16\xf1\x60\xca\x64\x2c\x50\x1f\x78\xc5\xed\x7e\xaf\xdb\xe0\x59\x04\x00\xd0\x87\x4f\x6f\x0a\x83\xdb\xfd\x5e\x69\x7d\x50\xae\x3b\xd3\xe6\x88\xa5\x75\x7b\xd0\x9a\x4d\x11\xf7\x4c\x1b\x3e\x16\xb8\x1c\x34\x5f\xac\x1b\x9d\xc5\xf1\x07\xbc\x6f\x34\x0d\xaa\x46\x07\x6a\x77\xa0\xba\xc3\x05\x8a\xb6\x08\x41\xd5\xe8\x40\xed\x0e\x2b\x11\xde\x4b\x6c\x8b\x10\x54\x8d\x0e\xd4\xee\xb0\x12\xe1\x9a\x25\xad\x21\x72\x5d\xb3\x0b\x75\xb8\xac\x44\xf9\x38\x8f\x99\x69\x8d\x53\x68\xdb\xdc\xa8\xd3\x8d\x16\xb3\x76\x33\x66\x82\x69\xf8\x83\x09\x8b\x30\x4c\xe7\xde\x8f\xfc\x62\xff\xc1\x2d\xf6\x8d\x5b\x7c\x16\x45\x51\x49\x9b\xee\x89\xcf\x19\x75\x32\x07\x26\x78\x22\x5f\xed\x69\x9e\x4c\xcd\xde\xe9\x09\x83\xa9\xc6\xc9\xab\xbd\x9e\xa7\xdd\x50\xcd\x9d\xdd\xc9\x60\x1e\xd8\xd7\xbd\x69\x14\x45\xb0\xf8\x57\x26\xd2\x48\xa3\x92\xd1\x3d\x28\x57\xa3\x28\xca\xe0\x2d\x9a\xa9\x8a\xe1\x1d\x9b\x21\x64\xf0\x01\xef\x2d\x92\xf1\x65\xfb\x5b\x9a\x2b\x49\xb8\xb8\xbf\x40\x1a\x6b\x3e\x77\x27\x06\x64\x51\x06\xfd\xf2\x07\x96\xee\xea\xb7\xf5\x7b\xe7\x5c\x92\x02\xb2\xff\x41\xb7\xba\x71\x27\xd5\x20\x03\xa8\xc4\xba\x40\x51\x71\x5f\x4f\xbc\xba\x71\x27\xe9\x6a\xb1\xc2\x5c\x55\x76\xd8\x74\x7a\x1b\x5c\xd6\x4d\x6e\x2d\xf4\x7b\x59\x8d\xbb\x9e\xfd\x75\xe3\x4e\xe6\xd7\x62\x39\xaa\x56\xfc\x37\x39\x08\x56\xcc\xbb\x0f\x81\x10\xd0\x4f\x79\x17\xdf\x6a\x87\xfd\xd6\x28\x57\xdb\x37\x6a\x21\x5b\x9e\x74\x95\x69\xf9\x52\xe4\x79\x76\xc9\x51\xb8\x41\xcf\x99\xf4\x3b\x1b\xf9\x59\x6c\x64\x54\x4e\x16\x58\xbe\x2d\x98\x14\x65\xc0\x3d\x67\xb8\x34\xc7\x47\xb7\xfb\x3d\x7f\x0d\x7d\x0a\xd8\x8c\x35\x32\x83\x7a\x03\x9b\x3b\xc3\x3d\xf1\x3f\x91\xd1\x5c\x26\xee\xa4\xf3\x42\xd5\xd2\xfa\x39\xeb\xde\x2d\xd8\x6c\xb2\x1b\xa7\xbb\x18\x05\x06\x6a\x58\x2e\xcd\x8b\xc3\xdb\xfd\x5e\x10\xaa\x76\x1a\x67\x4c\x7f\x5e\xb3\x99\x64\x6b\xe3\x3d\xde\x59\x0a\xc9\xb7\x1a\x85\x9f\x0e\x54\xc3\xd1\xd3\x80\x6d\x50\xec\x10\xfe\x31\x10\xa6\x36\x84\x69\x87\xf0\x93\x47\x38\x3c\xd2\x1b\x10\x0e\x8a\x1d\xc2\x3f\x06\xc2\xd4\x86\xf0\x8e\xc3\x4f\x1f\xe1\xf0\x79\xb5\x01\xe1\xa0\xd8\x21\xfc\x63\x20\x4c\x6d\x08\xef\x38\xfc\xf4\x11\xce\xff\x0a\x6c\x80\x38\xd7\xec\x30\xfe\xde\x31\xce\x60\x9e\xff\xd5\xdf\x5a\x1f\xf1\xbf\xba\x0d\x94\x8e\xb7\x33\x49\xd4\x3a\x49\xdf\xe4\xb4\xf8\xfa\xca\x8d\x32\x4c\xdc\x69\x1c\x2b\x1d\x6f\x60\xb8\x36\x60\xcc\x0c\xab\xbc\x52\x69\x7e\xab\x0d\x6e\x40\xe6\x6e\x82\xe3\x0d\xbb\x5b\xbc\x90\x6a\xe8\x6f\xa1\xdb\x71\xf5\xc9\x9f\xc7\xc5\x5b\xc4\x0e\x9c\x77\xcf\xdd\xa7\x81\x33\x54\xbf\x12\x88\x7a\x3d\x58\xfd\x2e\xc3\xe1\x18\xde\x64\x2e\x60\x7c\xa7\x0c\x12\x64\x70\xfe\xfc\x39\x64\xf0\x1b\x7b\x70\xa7\xc9\x75\x6a\xa6\x0e\x4e\xf8\x55\x39\x55\xcf\x2d\xbd\xb9\x86\x0c\x3e\xd8\x51\xda\xf6\xee\x3f\x5c\x6b\xc8\x07\xa1\xfc\x55\xea\xa3\x0c\x8a\xb9\x8c\x95\x1d\x09\xdc\x83\xc1\x29\x04\x31\x14\x56\xc8\x85\x30\x11\x8a\x99\xc5\xf5\xf8\xa8\x49\x75\x19\xae\xd5\xed\xbd\xca\xef\xbe\x30\xaa\x6f\x55\xbf\xbe\x38\x6c\xd0\x34\xec\xec\x31\xf7\x3b\x7b\x09\x32\xf8\x48\x48\xf0\xc0\x34\x67\x23\x81\x7d\x81\x32\x31\x53\x40\x39\x56\x31\x97\xc9\x01\x5c\x49\x9c\x4c\xf8\x98\xa3\x34\x30\x51\xba\xd0\x80\xc4\x84\x19\xfe\x80\x20\xed\x6c\x84\x9a\xe0\xdf\xbf\xff\x01\x3e\x81\x54\x59\x0d\x13\x4f\x3d\x4e\x20\xf8\x67\x14\x29\x18\x05\x53\xe6\x6c\x17\x4e\xfe\x9b\x29\xfa\x09\x2c\x21\x50\x48\x85\x4b\x32\xc8\xe2\x03\xc8\x8a\xdc\xb8\x34\xd5\xdf\xcb\x6b\x98\xf8\x19\x7b\xcd\x13\x69\x67\xa0\x34\x5c\xf2\x47\x27\xed\x33\x02\x8d\xf7\x96\x6b\x8c\x9f\xad\x54\x7f\x7c\xb4\xa8\xde\xa3\xf1\x7d\x54\x7f\x7c\x54\xab\xde\xe7\x26\x94\x4c\xc2\xed\xa0\x14\x6b\x1a\xd7\x84\x41\x20\x57\xd9\x8b\xa5\x9a\x6d\x09\xb9\xdd\x10\xf3\xac\xb4\x2c\xba\xbd\x48\xa1\xd0\xd8\xaf\x01\xc2\x96\x48\xd8\x0d\xa1\xc8\x4a\xcb\xd5\xc6\x14\x2a\xbb\xa6\x35\x1b\x65\x47\x65\xcb\x68\xc3\x96\xdd\xf0\x44\x62\xec\xdb\xe5\xc1\x3d\x80\xe1\x14\x09\x61\xa6\x34\x42\x31\x43\x22\x0d\x2e\xb8\x3a\x3f\x66\xca\x24\x68\x4c\xac\x3b\x00\x7d\x50\xfa\x96\x4c\xa0\x12\x00\xda\x10\x80\xad\x97\x78\x7c\x44\xdb\x1f\xf7\x09\x7f\xc4\x38\x07\x2f\x97\x21\x83\x33\xf1\x85\xa5\x04\x13\xc7\xce\x51\x6a\x90\x0e\xe0\xed\x52\xda\x21\xb9\x7c\xb8\xf9\x24\x67\x28\x30\x8d\xa0\x26\x06\x25\x24\xf9\xf3\xdd\xdb\x1d\xfe\x79\xf8\xb2\x99\x26\x5b\x63\x88\xcf\x3d\x47\x28\x97\xcb\x3a\x90\x27\x53\xb3\xae\x10\x77\xa8\xac\x2f\xe4\xe7\xe3\x6d\x51\x6b\x79\xbe\xaa\x38\x50\x27\x10\xdf\x70\xc8\xab\x4d\xa4\xee\x2e\x6e\x7b\x0e\x47\x4a\x09\x1f\xd7\x09\xe1\x01\x9e\x4b\xee\x82\x4c\xae\x48\x4d\x16\x43\x6d\xf1\x5c\x30\xa2\xc1\x25\x13\x14\xc4\x5a\x8d\x3e\x89\x50\xe1\x22\x9f\xb3\x85\x38\xb3\x64\x80\x85\x6a\xc7\x4a\x1a\xc6\x25\x7c\x1c\x5e\xf6\x5f\xe6\x1c\x8d\x5d\x1f\x7f\xe9\x8f\xb8\x81\xb3\x9b\xf3\xab\x2b\x30\xf8\x68\x5c\x2f\x8a\xad\x6e\x16\x02\x19\x3d\xb0\x92\x7b\x66\x57\xf4\xab\x42\xee\xb1\xef\xe3\xd4\x00\xf1\xbd\x0e\x5d\x49\xc3\xa7\xb8\xb7\x2c\x2d\x32\x63\x32\x05\xa6\x47\xdc\x68\xa6\x53\x20\xbc\xb7\x28\xc7\xfe\xbf\x73\x15\x18\x95\x2d\x4f\x0d\x56\x73\x73\x1f\x36\x6f\x9d\x59\x83\x6e\x39\x2f\x5f\x68\xff\xe5\xeb\xab\xa1\x4b\x2e\xfa\x2f\x00\x00\xff\xff\x3f\x8e\x70\xa3\x63\x26\x00\x00"),
		},
		"/boilerplate/go.mod": &vfsgen۰CompressedFileInfo{
			name:             "go.mod",
			modTime:          time.Date(2021, 10, 28, 11, 54, 32, 233342973, time.UTC),
			uncompressedSize: 511,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\x91\xcb\xae\xe2\x30\x0c\x86\xd7\xe4\x29\xb2\x1c\x16\x75\xec\xb4\xb4\xb0\x80\x77\x09\x49\x08\x91\x9a\xba\x93\x5e\xc4\x08\xf1\xee\x23\x8a\xd0\xa1\x47\x3a\xd2\x71\x36\x9f\x72\xf9\x62\xfd\x4e\xec\xa6\xd6\xcb\xfb\x1d\x3a\x93\xfc\xe3\x51\x0c\x3e\xcf\xd1\x7a\x21\x02\x4b\x02\x2a\x85\xc8\xfe\xef\x14\xb3\x97\x7f\xc4\xc6\x72\x4a\x72\x46\x40\xc0\x02\x11\x69\x59\x4b\x15\xf8\x51\x62\x13\xe2\x78\x9d\xce\x60\x39\xa9\x14\x6d\x66\x15\xb8\x78\xc1\xac\xe5\xac\xe1\x00\xb4\xba\x34\x5c\xb9\x1f\xfa\x1c\xbb\xa0\x9c\xb7\x31\x99\x56\xce\x04\x1a\xd6\xaa\x1b\xe7\xd4\xb7\xd3\xb0\xc0\xbb\x0f\x8d\x9a\x70\xaf\x35\x21\x96\x58\x15\x95\x27\x57\x5d\xac\x25\x5f\x37\x62\x13\xb8\x35\x5d\x00\xce\x41\xdd\x54\xe7\xc7\xf5\x23\xdc\xd1\x5e\x6b\xac\x0a\x63\x0c\xb9\x73\xdd\x1c\x2c\x3a\xa9\x94\x8c\x9d\x8b\xd9\xdb\xf1\x9b\x60\xf8\x37\x7c\x0a\x08\xa9\xc4\x66\x87\x58\x16\x87\xc6\xd8\xba\x71\x97\x86\x76\x76\x2d\xe8\x33\x8f\xfc\x9b\xcc\xb6\xcf\xa4\xfb\xd6\x58\x2f\x03\x73\x68\x3d\x7c\xfc\x1d\x72\x6f\xe5\xf1\xf4\xd3\xc9\x33\xab\x1a\xf0\xcb\xf0\x9e\xd5\xf1\x24\x01\xd4\x13\xdf\x9d\xbc\x76\x16\x16\x5b\xf1\x3f\x00\x00\xff\xff\x8a\xf6\x70\xb4\xff\x01\x00\x00"),
		},
		"/boilerplate/srv": &vfsgen۰DirInfo{
			name:    "srv",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 887296398, time.UTC),
		},
		"/boilerplate/srv/Dockerfile": &vfsgen۰CompressedFileInfo{
			name:             "Dockerfile",
			modTime:          time.Date(2021, 10, 15, 18, 23, 17, 343978199, time.UTC),
			uncompressedSize: 158,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x72\x0b\xf2\xf7\x55\xa8\xca\xc8\x2e\xd5\x4f\xcf\xcf\x49\xcc\x4b\xb7\x32\xd4\x33\x34\xd1\x33\x34\xd4\x4d\xcc\x29\xc8\xcc\x4b\x55\x48\x2c\x56\x48\x2a\xcd\xcc\x49\x49\x2d\xe2\x72\xf6\x0f\x88\x54\xd0\x53\xd0\xe7\x0a\x0a\xf5\x53\xc8\x4d\xcc\x4e\x85\xc8\x70\x71\x21\xcc\x80\x68\xb2\xca\x49\x2c\x49\x2d\x2e\x81\x68\xd0\xd5\x4d\x2b\xca\xcf\xb5\x85\x1a\xa2\xa0\x5f\x5c\x54\xa6\x57\x5d\xad\x97\x97\x98\x9b\x5a\x5b\xab\xa0\xc7\xe5\xea\x17\x12\x14\x19\xe0\xef\xe9\x17\xa2\x10\xad\x84\x2a\xab\x14\x0b\x08\x00\x00\xff\xff\x51\xae\xcb\x7a\x9e\x00\x00\x00"),
		},
		"/boilerplate/srv/handler": &vfsgen۰DirInfo{
			name:    "handler",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 887296398, time.UTC),
		},
		"/boilerplate/srv/handler/handler.go": &vfsgen۰FileInfo{
			name:    "handler.go",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 887296398, time.UTC),
			content: []byte("\x70\x61\x63\x6b\x61\x67\x65\x20\x68\x61\x6e\x64\x6c\x65\x72\x0a\x0a\x74\x79\x70\x65\x20\x48\x61\x6e\x64\x6c\x65\x72\x20\x73\x74\x72\x75\x63\x74\x7b\x7d\x0a"),
		},
		"/boilerplate/srv/handler/helloworld_dbhandler.go": &vfsgen۰CompressedFileInfo{
			name:             "helloworld_dbhandler.go",
			modTime:          time.Date(2021, 11, 2, 13, 47, 42, 784068882, time.UTC),
			uncompressedSize: 2174,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x94\x5f\x6f\xd3\x3c\x14\xc6\xaf\xe3\x4f\x71\x96\x8b\x57\x49\x94\xd7\x19\x12\xe2\x62\x52\x91\x60\x19\xd0\x9b\x0d\x4d\xe5\x6a\x9a\x50\x9a\x9c\xa6\x16\x89\x1d\x9c\x93\xae\xa8\xca\x77\x47\xb6\xfb\x27\x9d\xa0\x74\x65\x93\xb8\x5a\x56\x9f\xf3\xf8\x39\xcf\xcf\x76\x93\xe5\xdf\xb2\x12\x61\x9e\xc9\xa2\x42\xcd\x98\xa8\x1b\xa5\x09\x02\xe6\xf9\xb9\xaa\xeb\xa4\x52\x65\x89\xda\xb7\xff\x4a\xc2\x25\x99\xcf\xd5\x8a\xcb\xac\xc6\xbe\xff\xbf\x45\xbd\x10\x39\x26\xad\x5e\x24\xf4\xa3\xc1\xd6\x67\xcc\xf3\x4b\x41\xf3\x6e\xca\x73\x55\x27\x4b\xa5\xeb\xa6\xea\x5a\xfb\xe1\xb3\x90\xb1\x24\x81\xd5\x8a\xd4\x44\x50\x85\xc0\x1b\xad\x48\xf1\x6b\xab\xf6\xae\x28\xd2\xf7\x50\xe0\x4c\x48\x2c\x60\x72\x93\xde\xb0\x59\x27\x73\x08\xe6\x10\x7d\x72\x06\xc3\x83\xbd\x41\x4e\x4b\x58\xfb\xe4\x97\xee\x6f\x0c\xc5\x14\x22\xb3\x3b\xbf\x92\xa5\x90\x18\x83\x20\xac\x21\xb2\x76\xf9\x6f\xe4\x42\x40\xad\x95\x86\x15\xf3\x5c\x02\x7c\x2c\x67\xca\xe8\xc7\xe0\xdf\x62\x8e\x62\x81\xc5\xe1\x39\x34\x7e\xef\xb0\x25\x3f\x64\xcc\x4b\x12\xbb\x29\xbf\xd4\x98\x11\x4e\x44\x8d\x30\x02\x12\x35\xf2\x6b\xf5\x10\x84\xcc\xd3\x48\xb1\xd9\x12\x2e\x46\x50\x4c\xf9\x58\xb6\xa8\x29\x30\x3d\x21\xf3\xc4\xcc\x2e\x9d\x8d\x40\x8a\xca\x58\x32\xe5\x9d\x96\xe6\x57\xe6\xf5\xcc\xb3\xda\xe3\x14\x46\xd0\x09\x49\x6f\x5e\x07\x1a\xc9\x89\x6e\xaa\xfa\x43\xb9\xa7\x58\x9d\x9c\xbb\xed\x3d\x32\xf7\x87\x39\x6a\x7c\xc9\xe0\xdd\x20\xc3\xe0\x1f\xe7\x9a\x06\xd6\x04\x1f\xa7\x21\xff\xd2\x14\x19\x61\xf0\xdf\x41\x3f\x26\xed\x24\x01\x57\x6b\xc0\x5d\x0c\xb8\xc5\x6e\x71\xdc\xa6\x58\x21\xe1\x05\x00\xbc\x8a\x99\xd7\x1f\xc3\x6c\xe3\xe3\x54\x68\xce\xd1\xc9\xdc\x36\xed\xff\xc8\x95\xd9\x4e\x33\x84\xf7\xf5\x11\xba\xf5\x31\xdf\x92\x3b\xf6\x7a\x1c\x1b\xe9\x8d\x3c\x3d\x4f\xdb\xfb\x8c\xf7\xe0\xe5\x23\x77\xd3\x0e\xf3\xb6\x6e\x77\x89\x7f\xc4\x27\xbc\x40\x33\x38\xc3\x25\x0d\x97\xdc\xc8\x5a\x5f\x2b\xba\x5a\x8a\x96\x9e\x84\xe2\x73\x56\x9e\xce\xc2\x35\x3f\x2b\x8c\x4a\xb4\x04\xd1\xdd\xfd\x1f\xca\x48\x51\x56\xdd\x62\xae\x74\x01\x9c\xf3\xc8\xdd\xec\xbf\xc2\xb4\x4e\x62\x8f\xd3\x16\xd1\x07\x21\x8b\xc0\x78\x5b\xcf\x71\x24\xaa\x0a\x65\x30\xb0\x1a\xc2\x5b\x38\xb7\xa5\xf9\xde\x01\xb8\x54\x9d\xa4\x60\x23\xfc\x0b\xe5\x3d\x69\xa3\xed\x45\x03\xd9\xbb\xf3\xfb\xdd\xe3\x96\x9b\xb7\x6d\x77\x00\xa4\xa8\x58\xcf\x7e\x06\x00\x00\xff\xff\x50\xa9\xcc\xa4\x7e\x08\x00\x00"),
		},
		"/boilerplate/srv/handler/helloworld_handler.go": &vfsgen۰CompressedFileInfo{
			name:             "helloworld_handler.go",
			modTime:          time.Date(2021, 11, 2, 13, 54, 3, 844086157, time.UTC),
			uncompressedSize: 5231,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xec\x98\xc1\x6f\xd3\x30\x14\xc6\xcf\xf1\x5f\xf1\x88\xb4\xa9\x1d\xc5\x01\x09\x71\x40\xf4\xc0\x16\x24\x7a\x60\x45\xa3\x9c\x10\x42\x59\xf2\xba\x59\x73\x9c\xd4\x71\xbb\x8d\xaa\xff\x3b\x7a\x76\xdb\x65\x6c\xcd\xd2\x66\x11\xaa\xc4\x89\x26\x79\xef\xf3\xf7\x3d\xe7\x67\x85\xe5\x51\x7c\x15\x5d\x20\x5c\x46\x2a\x91\xa8\x19\x13\x69\x9e\x69\x03\x1d\xe6\xf9\x71\xa6\x0c\xde\x18\x9f\xd9\xdf\x69\x1a\x24\xe7\x41\x7a\x5b\x4c\xa4\xbf\xba\x21\xb3\x8b\x0b\xd4\xeb\x4b\x23\xd2\xd2\xd5\xd4\x08\x19\x24\x88\x39\xdd\x99\xcf\xb9\x8a\x52\x5c\x2c\x5e\x15\xa8\x67\x22\xc6\xa0\xd0\xb3\xc0\xdc\xe6\x58\xd0\xe3\x5c\x67\x26\x0b\xd6\x45\x3e\xeb\x32\x16\x04\x30\x9f\x9b\x6c\x24\x8c\x44\xe0\xb6\x82\x9f\xda\xc7\x1f\x93\x04\x12\x1c\x0b\x85\x09\x8c\x86\xe1\x90\x8d\xa7\x2a\x86\xce\x25\x1c\x7d\x76\x31\xba\x15\x9d\x9d\xd8\xdc\xc0\x32\x1a\x3f\x71\xff\xf6\x40\xe3\x04\x8e\xd6\xeb\xf3\xcd\xed\x67\x38\xe9\x81\x2e\xf2\xba\xd5\x45\x17\x50\xeb\x4c\xc3\x9c\x79\x6e\x5c\x7c\xa0\xc6\x19\xb9\xe8\x81\x7f\x86\x31\x8a\x19\x26\x55\x49\x35\x4e\xa6\x58\x18\xbf\xcb\x98\x97\x46\xfa\x0a\x35\xbc\xef\x83\x9d\x35\x3f\xc5\xeb\x2f\x91\xbe\xea\x74\x99\x97\xe0\x18\x35\xb8\x02\x3e\x50\xc2\x2c\x97\xd8\xac\x5c\x52\xe4\x56\xc5\x4f\x22\x13\xfd\x2a\xb2\xa9\x8e\xd1\x27\xc9\xf3\x1e\x99\xa7\xe5\xec\xbe\x5b\xd9\xf0\xf8\x41\x9d\x18\xdb\xb2\x17\x7d\x50\x42\x52\xd0\x55\xd2\x4f\x94\x7c\xbc\x34\xe2\x9a\xe1\x60\xe6\x5b\xd5\x2e\xf3\x3c\x8d\x66\xaa\x15\x5d\x31\x6f\xf1\xb7\x99\x93\x2c\xbf\xa5\xf0\xd6\x49\x64\x22\x9b\x9a\x5e\x98\x4d\xf3\x9e\x2f\x98\x47\x3e\xfa\x40\x6f\x1d\xa7\xfe\xce\x21\x75\xda\xed\xad\xed\xd3\xae\x5b\xdb\xe5\xe6\xf1\x86\xc7\xe4\x3c\x08\x80\x2c\xf0\x13\x8d\x91\xc1\x91\x48\x11\xdc\xe6\xf1\xd3\xec\xba\x53\x2a\xf8\x9e\x27\x8f\x17\xb8\x48\x97\xbc\x6a\x25\x67\x9d\xf6\xcb\x06\xae\x9d\xb5\x4a\xb3\x62\x06\x9e\x2e\x72\x3e\x48\x68\xd2\x64\x7d\x10\xb2\x55\x81\x12\x92\x2d\xaa\xd8\x0d\x51\xee\xc8\x6e\x88\xb2\x09\xbb\x21\xca\x2d\xd8\xb5\xd5\xcd\xd8\xa5\xa4\xed\xb0\x1b\xa2\xdc\x23\x76\xc7\x42\x9a\x65\xee\xad\xe9\x75\xbd\xff\x80\xdf\x10\xa5\xe3\xf7\x09\xfa\x6c\x5d\x89\x3e\x67\xb8\x29\x7f\x56\xb5\x16\x7f\x6e\xbd\xad\x08\x74\x07\xcd\x8e\x10\xba\xe6\x26\x1c\x3a\x85\x2d\x50\x5c\x35\x34\xa3\x71\x99\xba\x1d\x20\x9d\xf8\x7f\x26\xdb\x65\xd2\x4d\xb9\x16\x96\xab\xd2\x67\x27\x73\x25\xdc\x16\x9c\x43\xb5\x2b\x99\x43\xd5\x08\xcb\xa1\xda\x86\x49\x5b\xdd\x0c\x48\x4a\xda\x0e\x8d\x43\xb5\x7f\x28\xf6\xa0\xe6\x27\x6e\x6f\x9f\x88\x1d\xaa\x7a\xb8\xda\xba\x07\xac\x3e\xd3\xc7\xac\x15\x6f\xe7\x63\xf6\x2b\xfd\xd7\x79\x37\x5c\xa9\xb5\x09\xaf\xd4\xbf\x05\xb0\xae\xbc\x19\xb1\x36\x6d\x3b\xc8\x92\xf4\x1e\x32\x2b\x45\x61\x6a\x31\xfb\xe3\xe7\x1e\x51\x4b\x9b\xe1\xb0\x9d\x45\x1a\x4c\x66\x22\x79\x86\x71\xa6\x13\x98\x0a\x65\xde\xbd\x2d\xdd\xb7\xaf\xc4\xea\xee\x13\x90\x3b\xd9\xc7\x28\xa7\x31\xf6\xe0\xb0\xb4\x52\xcb\xbb\x58\xe4\x77\x87\x52\x69\xe2\x74\x10\x84\xf6\xef\x05\xd6\x92\x33\x51\xce\xff\x81\x36\x83\x7f\x13\xbf\xd1\x1a\xba\x1b\x41\x1f\xde\x30\x6f\x01\x28\x0b\x84\xfb\x3d\x07\xeb\x8e\x7e\x1f\x5e\x3f\x68\x2b\xab\x07\x6b\xf5\xb5\x56\x45\x79\xb0\x16\x7e\x69\x17\x67\xee\x20\x1b\x95\x04\xef\xd5\x97\x1e\x97\xc5\xe8\xb7\x7b\xe4\x4c\x96\x3c\x3c\xcb\x2b\x77\xff\x2c\xfd\x13\x00\x00\xff\xff\xa4\x89\xb5\x9b\x6f\x14\x00\x00"),
		},
		"/boilerplate/srv/main.go": &vfsgen۰CompressedFileInfo{
			name:             "main.go",
			modTime:          time.Date(2021, 11, 2, 13, 52, 13, 50747797, time.UTC),
			uncompressedSize: 370,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x44\x8f\xcd\x6a\xeb\x30\x10\x85\xd7\x9a\xa7\xd0\xf5\xe2\x22\x81\x2b\xef\x5b\xb2\xe9\x22\x74\x95\x45\x5a\xe8\x7a\x50\x26\x8e\x88\xf5\xc3\x78\x92\x06\x8c\xdf\xbd\xc8\x36\xe9\x4e\x9a\xf3\xc1\x39\x5f\x41\x7f\xc5\x9e\x74\xc4\x90\x00\x42\x2c\x99\x45\x1b\x50\xcd\x34\xb9\x84\x91\xe6\xf9\x65\x24\xbe\x07\x4f\xdd\xc8\xf7\xee\x82\xe9\x34\x10\x37\xa0\x9a\xc2\x59\x72\xf7\xc4\xea\xc9\xe7\x24\xf4\x90\xf5\x19\x63\x37\xe4\xbe\x5f\xe1\xe5\x1b\x83\xe7\xdc\x80\x05\x38\xdf\x92\x5f\x2a\x8d\xd5\x13\x28\x2c\xa5\xd5\x5e\x1e\xfa\x75\xa7\x17\xc8\x1d\xe8\xe7\x73\xad\xfd\x0e\x72\x39\x60\x24\xb3\x05\x18\x69\x9f\x39\xa2\x98\x66\xe4\xbb\xfb\xeb\xb7\xb6\xd5\xdb\x00\xf7\x8e\xfe\xda\x73\xbe\xa5\x93\xb1\xa0\x9e\x8c\x3b\x52\x1f\x46\x21\x9e\x26\xc9\x5f\x41\x06\xd2\x5b\xf2\xb1\x7a\x19\x2c\xc5\xd5\x62\x62\x63\x5b\xfd\x7f\xd3\x75\x5b\x3c\xcd\x16\x54\x38\x6b\x62\xae\x53\x2b\x7c\xbc\x25\x63\xdf\x96\xcb\xbf\x9d\x4e\x61\xa8\x3e\x6a\x15\x77\x7b\x14\x1c\x8c\x97\x47\x5b\x01\x0b\x6a\x86\x19\x7e\x03\x00\x00\xff\xff\xb6\x2c\xa8\x2b\x72\x01\x00\x00"),
		},
		"/boilerplate/srv/types": &vfsgen۰DirInfo{
			name:    "types",
			modTime: time.Date(2021, 10, 15, 18, 17, 39, 887296398, time.UTC),
		},
		"/boilerplate/srv/types/article.go": &vfsgen۰CompressedFileInfo{
			name:             "article.go",
			modTime:          time.Date(2021, 11, 1, 16, 23, 34, 514331644, time.UTC),
			uncompressedSize: 687,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x84\x92\xc1\x4a\xeb\x40\x14\x86\xd7\x3d\x4f\x71\xc8\xe2\x32\x73\xe9\x4d\xf7\x85\xbb\x13\x77\xb5\x20\x11\x04\x11\x3a\x4d\x4e\x63\x34\x99\x09\x27\x53\x69\x19\x66\xed\x1b\xb8\x76\xef\x7b\xe9\x6b\xc8\x24\x31\xcd\xc2\xd8\x5d\x72\xce\xff\x9f\xef\xff\x49\x6a\x95\x3e\xa9\x9c\xd0\x1e\x6b\x6a\x00\x8a\xaa\x36\x6c\x51\xc0\x2c\x22\x9d\x9a\xac\xd0\xf9\xe2\xb1\x31\x3a\x02\x09\xb0\x58\xa0\x73\xd6\x24\x85\x2d\x09\xe3\x9a\x8d\x35\xf1\x95\xaa\xc8\x7b\xcc\x68\x57\x68\xca\xf0\xe3\xf5\xe5\xf3\xfd\x0d\xc2\xb5\x49\x6d\x63\x79\x9f\x5a\x74\x30\x73\xee\x1f\xb2\xd2\xf9\xa0\xb8\x2c\xa8\xcc\x1a\xef\xc3\x6a\x30\xf7\x36\xe7\xe2\xe4\x58\x87\xa7\xcd\xc1\x70\xb5\xc4\xc8\xb9\xf8\x76\x7d\xbd\xf2\x3e\xc2\x90\xb1\x9b\x74\xea\x08\x0f\x55\xb9\x1c\xbd\x6f\x3a\x1a\xe9\xcc\x7b\xf0\x6d\x97\x44\x6d\x4b\x0a\xeb\x21\x7d\xb2\xbe\x58\xc3\x6e\xaf\x53\x14\x15\xfe\x9d\xc8\x2f\x4f\x46\x21\x43\x99\x42\xe7\xa1\x0c\x93\xdd\xb3\x6e\x33\x8c\xe5\x51\x4f\x5b\x29\x6e\x1e\x54\xf9\x13\x8b\x7f\x61\xf5\x36\x21\x51\xdc\xdd\x6f\x8f\x96\xe6\x48\xcc\x86\xe5\x08\x19\xca\xc7\xdf\x42\x96\x3d\xf0\x46\x57\xdd\xe8\xdc\x37\x3b\x25\x39\x67\x11\x99\xb2\x0a\xbb\x1c\x12\xc5\x84\x6a\x9c\xf0\x59\x31\xf2\xd4\x9f\x00\x33\x62\xc6\xe5\xff\xae\xc0\x00\x6f\x29\x73\xfc\xc3\x72\x68\xc8\xed\x4d\xf0\xf0\x15\x00\x00\xff\xff\xa7\x95\x65\x41\xaf\x02\x00\x00"),
		},
		"/proto": &vfsgen۰DirInfo{
			name:    "proto",
			modTime: time.Date(2021, 10, 18, 13, 28, 8, 766726708, time.UTC),
		},
		"/proto/handler.proto": &vfsgen۰CompressedFileInfo{
			name:             "handler.proto",
			modTime:          time.Date(2021, 11, 1, 15, 37, 25, 447544449, time.UTC),
			uncompressedSize: 667,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\x8c\xcd\xcf\x8a\x83\x30\x10\xc7\xf1\xf3\xe6\x29\x06\x4f\x7a\x71\x0f\x7b\x94\x3d\x14\x7a\xae\xa5\xb4\x0f\x10\x74\x10\xa9\x26\x69\x32\x2d\x2d\x21\xef\x5e\x8c\xf6\xcf\x25\x32\xb7\x81\xef\x6f\xf8\xb8\x87\x22\x79\x87\x7f\xc8\x8c\xd5\xa4\xff\xb2\x4a\x08\x23\x9b\xb3\xec\x10\xbc\x2f\x95\x1c\x31\x84\x4a\x88\x7e\x34\xda\xd2\xb2\xfa\x7d\x97\xcf\x55\xc6\x32\xbd\x3b\xb4\xb7\xbe\x99\xde\x49\x1f\x7b\x1a\x10\x96\x09\x78\xf1\x63\x4d\xf3\x1d\xe2\x53\xb9\x8b\x79\xd3\xb6\x79\x3a\x1d\xf0\x52\x80\x45\xba\x5a\xe5\x60\x75\xe7\x0a\xf0\x41\x00\x00\xac\x60\x5b\x1c\xf2\x74\x62\x61\x71\xc7\xc2\x4e\xa6\x95\x84\xf9\x6a\x65\x91\xaf\x29\x4b\xad\x55\x92\xac\x15\xcf\x8b\x3b\x16\xb6\x97\x5d\x52\x9b\x1a\x8b\x9b\x87\xb3\x17\xc4\x33\x00\x00\xff\xff\x7c\x81\x76\xf2\x9b\x02\x00\x00"),
		},
		"/proto/helloworld.proto": &vfsgen۰CompressedFileInfo{
			name:             "helloworld.proto",
			modTime:          time.Date(2021, 11, 1, 17, 35, 10, 181186393, time.UTC),
			uncompressedSize: 1602,

			compressedContent: []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x02\xff\xcc\x54\x41\x4b\xf3\x40\x10\x3d\x67\x7f\xc5\x50\x72\xfc\xbe\x80\xb6\x7a\xb0\xe4\x20\x88\xe0\xc5\x8a\xd4\x93\x48\x59\xba\x43\x58\x4d\x77\xd7\xec\x58\x5a\x97\xfd\xef\x32\x69\x83\x21\x51\xcc\xa1\x87\x5c\x67\xde\x7b\xf3\xe6\xcd\xb2\x7e\x6f\x48\xee\x20\x87\x89\xab\x2c\xd9\xe9\x64\x2e\x84\x93\xeb\x37\x59\x20\x84\x90\x19\xb9\xc1\x18\xe7\x42\x6c\xd0\xfb\x43\x8d\xec\x52\x53\x89\x90\xd5\x84\xec\xbe\x46\x40\x10\x00\x00\x21\xfc\x87\x4a\x9a\x02\x21\xd5\xff\x20\xdd\xc2\x55\xde\xe0\x6e\x35\x96\xca\xc7\x28\x92\x10\xb2\xe5\xde\xd5\xa4\x90\x6e\x1b\x81\x9c\xc7\xdd\x19\x85\x3b\x48\x75\xd3\x5b\x38\xd2\xd6\x78\x76\x90\xb0\x36\x1a\x15\xa3\x88\x7f\xda\xb9\x56\xea\x11\xdf\xc7\x68\xca\x8f\xcc\xd4\x0d\x96\xdf\x49\x7d\x68\x43\x97\x33\xd0\x0a\x72\x38\x83\xe7\x57\x6f\xcd\x8a\x5f\x00\x3f\x0f\xad\x26\x2f\xf3\xa1\x82\xfe\x84\x82\x4f\x4e\x49\xc2\xf1\x9d\xb3\xf1\x35\xb6\x8b\x2e\x0c\x9e\xf6\xa2\xb5\xe0\xd8\xb6\x7c\x90\x45\x7f\x4d\xc7\x84\xfe\xa2\x5c\xe6\x55\x5b\x48\xaf\x3f\xb9\x75\xde\x41\x72\x79\x58\x28\x87\xf9\x9c\x4a\x32\x6c\x78\x32\x6c\x72\x03\x23\x4b\xb2\x5c\x55\xb8\xb6\x15\xdf\x6e\xda\x81\xb7\xdb\x7d\xda\xd1\xca\xec\x47\x52\x3b\x8d\x0a\x1d\x4a\x42\xf5\xeb\xb7\xae\x24\x49\xc8\xe1\xa2\xa3\xc4\xe5\x63\x4e\xe2\x2b\x00\x00\xff\xff\xe8\x1e\xed\x89\x42\x06\x00\x00"),
		},
	}
	fs["/"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate"].(os.FileInfo),
		fs["/proto"].(os.FileInfo),
	}
	fs["/boilerplate"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/.gitignore"].(os.FileInfo),
		fs["/boilerplate/Makefile"].(os.FileInfo),
		fs["/boilerplate/api"].(os.FileInfo),
		fs["/boilerplate/doc.md"].(os.FileInfo),
		fs["/boilerplate/go.mod"].(os.FileInfo),
		fs["/boilerplate/srv"].(os.FileInfo),
	}
	fs["/boilerplate/api"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/api/Dockerfile"].(os.FileInfo),
		fs["/boilerplate/api/handler"].(os.FileInfo),
		fs["/boilerplate/api/main.go"].(os.FileInfo),
	}
	fs["/boilerplate/api/handler"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/api/handler/handler.go"].(os.FileInfo),
		fs["/boilerplate/api/handler/helloworld_handler.go"].(os.FileInfo),
	}
	fs["/boilerplate/srv"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/srv/Dockerfile"].(os.FileInfo),
		fs["/boilerplate/srv/handler"].(os.FileInfo),
		fs["/boilerplate/srv/main.go"].(os.FileInfo),
		fs["/boilerplate/srv/types"].(os.FileInfo),
	}
	fs["/boilerplate/srv/handler"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/srv/handler/handler.go"].(os.FileInfo),
		fs["/boilerplate/srv/handler/helloworld_dbhandler.go"].(os.FileInfo),
		fs["/boilerplate/srv/handler/helloworld_handler.go"].(os.FileInfo),
	}
	fs["/boilerplate/srv/types"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/boilerplate/srv/types/article.go"].(os.FileInfo),
	}
	fs["/proto"].(*vfsgen۰DirInfo).entries = []os.FileInfo{
		fs["/proto/handler.proto"].(os.FileInfo),
		fs["/proto/helloworld.proto"].(os.FileInfo),
	}

	return fs
}()

type vfsgen۰FS map[string]interface{}

func (fs vfsgen۰FS) Open(path string) (http.File, error) {
	path = pathpkg.Clean("/" + path)
	f, ok := fs[path]
	if !ok {
		return nil, &os.PathError{Op: "open", Path: path, Err: os.ErrNotExist}
	}

	switch f := f.(type) {
	case *vfsgen۰CompressedFileInfo:
		gr, err := gzip.NewReader(bytes.NewReader(f.compressedContent))
		if err != nil {
			// This should never happen because we generate the gzip bytes such that they are always valid.
			panic("unexpected error reading own gzip compressed bytes: " + err.Error())
		}
		return &vfsgen۰CompressedFile{
			vfsgen۰CompressedFileInfo: f,
			gr:                        gr,
		}, nil
	case *vfsgen۰FileInfo:
		return &vfsgen۰File{
			vfsgen۰FileInfo: f,
			Reader:          bytes.NewReader(f.content),
		}, nil
	case *vfsgen۰DirInfo:
		return &vfsgen۰Dir{
			vfsgen۰DirInfo: f,
		}, nil
	default:
		// This should never happen because we generate only the above types.
		panic(fmt.Sprintf("unexpected type %T", f))
	}
}

// vfsgen۰CompressedFileInfo is a static definition of a gzip compressed file.
type vfsgen۰CompressedFileInfo struct {
	name              string
	modTime           time.Time
	compressedContent []byte
	uncompressedSize  int64
}

func (f *vfsgen۰CompressedFileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰CompressedFileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰CompressedFileInfo) GzipBytes() []byte {
	return f.compressedContent
}

func (f *vfsgen۰CompressedFileInfo) Name() string       { return f.name }
func (f *vfsgen۰CompressedFileInfo) Size() int64        { return f.uncompressedSize }
func (f *vfsgen۰CompressedFileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰CompressedFileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰CompressedFileInfo) IsDir() bool        { return false }
func (f *vfsgen۰CompressedFileInfo) Sys() interface{}   { return nil }

// vfsgen۰CompressedFile is an opened compressedFile instance.
type vfsgen۰CompressedFile struct {
	*vfsgen۰CompressedFileInfo
	gr      *gzip.Reader
	grPos   int64 // Actual gr uncompressed position.
	seekPos int64 // Seek uncompressed position.
}

func (f *vfsgen۰CompressedFile) Read(p []byte) (n int, err error) {
	if f.grPos > f.seekPos {
		// Rewind to beginning.
		err = f.gr.Reset(bytes.NewReader(f.compressedContent))
		if err != nil {
			return 0, err
		}
		f.grPos = 0
	}
	if f.grPos < f.seekPos {
		// Fast-forward.
		_, err = io.CopyN(ioutil.Discard, f.gr, f.seekPos-f.grPos)
		if err != nil {
			return 0, err
		}
		f.grPos = f.seekPos
	}
	n, err = f.gr.Read(p)
	f.grPos += int64(n)
	f.seekPos = f.grPos
	return n, err
}
func (f *vfsgen۰CompressedFile) Seek(offset int64, whence int) (int64, error) {
	switch whence {
	case io.SeekStart:
		f.seekPos = 0 + offset
	case io.SeekCurrent:
		f.seekPos += offset
	case io.SeekEnd:
		f.seekPos = f.uncompressedSize + offset
	default:
		panic(fmt.Errorf("invalid whence value: %v", whence))
	}
	return f.seekPos, nil
}
func (f *vfsgen۰CompressedFile) Close() error {
	return f.gr.Close()
}

// vfsgen۰FileInfo is a static definition of an uncompressed file (because it's not worth gzip compressing).
type vfsgen۰FileInfo struct {
	name    string
	modTime time.Time
	content []byte
}

func (f *vfsgen۰FileInfo) Readdir(count int) ([]os.FileInfo, error) {
	return nil, fmt.Errorf("cannot Readdir from file %s", f.name)
}
func (f *vfsgen۰FileInfo) Stat() (os.FileInfo, error) { return f, nil }

func (f *vfsgen۰FileInfo) NotWorthGzipCompressing() {}

func (f *vfsgen۰FileInfo) Name() string       { return f.name }
func (f *vfsgen۰FileInfo) Size() int64        { return int64(len(f.content)) }
func (f *vfsgen۰FileInfo) Mode() os.FileMode  { return 0444 }
func (f *vfsgen۰FileInfo) ModTime() time.Time { return f.modTime }
func (f *vfsgen۰FileInfo) IsDir() bool        { return false }
func (f *vfsgen۰FileInfo) Sys() interface{}   { return nil }

// vfsgen۰File is an opened file instance.
type vfsgen۰File struct {
	*vfsgen۰FileInfo
	*bytes.Reader
}

func (f *vfsgen۰File) Close() error {
	return nil
}

// vfsgen۰DirInfo is a static definition of a directory.
type vfsgen۰DirInfo struct {
	name    string
	modTime time.Time
	entries []os.FileInfo
}

func (d *vfsgen۰DirInfo) Read([]byte) (int, error) {
	return 0, fmt.Errorf("cannot Read from directory %s", d.name)
}
func (d *vfsgen۰DirInfo) Close() error               { return nil }
func (d *vfsgen۰DirInfo) Stat() (os.FileInfo, error) { return d, nil }

func (d *vfsgen۰DirInfo) Name() string       { return d.name }
func (d *vfsgen۰DirInfo) Size() int64        { return 0 }
func (d *vfsgen۰DirInfo) Mode() os.FileMode  { return 0755 | os.ModeDir }
func (d *vfsgen۰DirInfo) ModTime() time.Time { return d.modTime }
func (d *vfsgen۰DirInfo) IsDir() bool        { return true }
func (d *vfsgen۰DirInfo) Sys() interface{}   { return nil }

// vfsgen۰Dir is an opened dir instance.
type vfsgen۰Dir struct {
	*vfsgen۰DirInfo
	pos int // Position within entries for Seek and Readdir.
}

func (d *vfsgen۰Dir) Seek(offset int64, whence int) (int64, error) {
	if offset == 0 && whence == io.SeekStart {
		d.pos = 0
		return 0, nil
	}
	return 0, fmt.Errorf("unsupported Seek in directory %s", d.name)
}

func (d *vfsgen۰Dir) Readdir(count int) ([]os.FileInfo, error) {
	if d.pos >= len(d.entries) && count > 0 {
		return nil, io.EOF
	}
	if count <= 0 || count > len(d.entries)-d.pos {
		count = len(d.entries) - d.pos
	}
	e := d.entries[d.pos : d.pos+count]
	d.pos += count
	return e, nil
}
